{
  "src/lib/components/TraceUpdater.react.js": {
    "description": "TraceUpdater is a component which updates the trace-data of a plotly graph.",
    "displayName": "TraceUpdater",
    "methods": [],
    "props": {
      "id": {
        "type": {
          "name": "string"
        },
        "required": false,
        "description": "The ID used to identify this component in Dash callbacks."
      },
      "gdID": {
        "type": {
          "name": "string"
        },
        "required": true,
        "description": "The id of the graph-div whose traces should be updated.\r\n\r\n.. Note:\r\n\r\n  * if you use multiple graphs; each graph MUST have a unique id; otherwise we\r\n    cannot guarantee that resampling will work correctly.\r\n  * TraceUpdater will determine the html-graph-div by performing partial matching\r\n    on the \"id\" property (using `gdID`) of all divs with classname=\"dash-graph\".\r\n    It will select the first item of that match list; so if multiple same\r\n    graph-div IDs are used, or one graph-div-ID is a subset of the other (partial\r\n    matching) there is no guarantee that the correct div will be selected."
      },
      "sequentialUpdate": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Bool indicating whether the figure should be redrawn sequentially (i.e.)\r\ncalling the restyle multiple times or at once.\r\n(still needs to be determined which is faster has the lowest memory peak),\r\nby default False.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "updateData": {
        "type": {
          "name": "array"
        },
        "required": false,
        "description": "The data to update the graph with, must contain the `index` property for\r\neach trace; either a list of dict-traces or a single trace"
      },
      "invisibleUpdateData": {
        "type": {
          "name": "array"
        },
        "required": false,
        "description": "The data to update the graph with, must contain the `index` property for\r\neach invisible trace; either a list of dict-traces or a single trace"
      },
      "visibleUpdate": {
        "type": {
          "name": "number"
        },
        "required": false,
        "description": "Counter property meant to be the trigger for chained callback, will only\r\nbe updated after the updateData changed"
      },
      "verbose": {
        "type": {
          "name": "bool"
        },
        "required": false,
        "description": "Flag that turns on console timing. The timer for the visible update\r\nshould be started externally (with a webdriver or a JS script in Python)\r\nso the internal render timing can work.",
        "defaultValue": {
          "value": "false",
          "computed": false
        }
      },
      "setProps": {
        "type": {
          "name": "func"
        },
        "required": false,
        "description": "Dash-assigned callback that should be called to report property changes\r\nto Dash, to make them available for callbacks."
      }
    }
  }
}